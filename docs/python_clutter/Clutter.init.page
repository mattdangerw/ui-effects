<?xml version="1.0"?>

<page id="Clutter.init"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/experimental/ui/">
  <info>
    <link type="guide" xref="index" group="function"/>
    <api:function>
      <api:returns>
        <api:type>Clutter.InitError</api:type>
      </api:returns>
      <api:name>clutter_init</api:name>
      <api:arg>
        <api:type>gint</api:type>
        <api:name>argc</api:name>
      </api:arg>
      <api:arg>
        <api:type>[utf8]</api:type>
        <api:name>argv</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>init</title>
<synopsis><code mime="text/x-python">
@accepts(gint, [utf8])
@returns(Clutter.InitError)
def init(argc, argv)
</code></synopsis>
<p>Initialises everything needed to operate with Clutter and parses some
standard command line options; @argc and @argv are adjusted accordingly
so your own code will never see those standard arguments.</p><p>It is safe to call this function multiple times.</p><p>&lt;note&gt;This function will not abort in case of errors during
initialization; clutter_init() will print out the error message on
stderr, and will return an error code. It is up to the application
code to handle this case. If you need to display the error message
yourself, you can use clutter_init_with_args(), which takes a <link xref="GError">GError</link>
pointer.&lt;/note&gt;</p><p>If this function fails, and returns an error code, any subsequent
Clutter API will have undefined behaviour - including segmentation
faults and assertion failures. Make sure to handle the returned
<link xref="Clutter.InitError">Clutter.InitError</link> enumeration value.</p>

<table>
<tr>
<td><p>argc :</p></td>
<td><p>The number of arguments in @argv</p></td>
</tr>
<tr>
<td><p>argv :</p></td>
<td><p>A pointer to an array of arguments.</p></td>
</tr>
<tr>
<td><p>Returns :</p></td>
<td><p>a <link xref="Clutter.InitError">Clutter.InitError</link> value</p></td>
</tr>
</table>
</page>
