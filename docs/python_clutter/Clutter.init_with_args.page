<?xml version="1.0"?>

<page id="Clutter.init_with_args"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/experimental/ui/">
  <info>
    <link type="guide" xref="index" group="function"/>
    <api:function>
      <api:returns>
        <api:type>Clutter.InitError</api:type>
      </api:returns>
      <api:name>clutter_init_with_args</api:name>
      <api:arg>
        <api:type>gint</api:type>
        <api:name>argc</api:name>
      </api:arg>
      <api:arg>
        <api:type>[utf8]</api:type>
        <api:name>argv</api:name>
      </api:arg>
      <api:arg>
        <api:type>utf8</api:type>
        <api:name>parameter_string</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.OptionEntry</api:type>
        <api:name>entries</api:name>
      </api:arg>
      <api:arg>
        <api:type>utf8</api:type>
        <api:name>translation_domain</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>init_with_args</title>
<synopsis><code mime="text/x-python">
@accepts(gint, [utf8], utf8, GLib.OptionEntry, utf8)
@returns(Clutter.InitError)
def init_with_args(argc, argv, parameter_string, entries, translation_domain)
</code></synopsis>
<p>This function does the same work as clutter_init(). Additionally,
it allows you to add your own command line options, and it
automatically generates nicely formatted &lt;option&gt;--help&lt;/option&gt;
output. Note that your program will be terminated after writing
out the help output. Also note that, in case of error, the
error message will be placed inside @error instead of being
printed on the display.</p><p>Just like clutter_init(), if this function returns an error code then
any subsequent call to any other Clutter API will result in undefined
behaviour - including segmentation faults.</p><p>initialised, or other values or <link xref="Clutter.InitError">Clutter.InitError</link> in case of
error.</p>

<table>
<tr>
<td><p>argc :</p></td>
<td><p>a pointer to the number of command line arguments</p></td>
</tr>
<tr>
<td><p>argv :</p></td>
<td><p>a pointer to the array of command line arguments</p></td>
</tr>
<tr>
<td><p>parameter_string :</p></td>
<td><p>a string which is displayed in the first line of &lt;option&gt;--help&lt;/option&gt; output, after &lt;literal&gt;&lt;replaceable&gt;programname&lt;/replaceable&gt; [OPTION...]&lt;/literal&gt;</p></td>
</tr>
<tr>
<td><p>entries :</p></td>
<td><p>a None terminated array of <link xref="GOptionEntry">GOptionEntry</link>&lt;!-- --&gt;s describing the options of your program</p></td>
</tr>
<tr>
<td><p>translation_domain :</p></td>
<td><p>a translation domain to use for translating the &lt;option&gt;--help&lt;/option&gt; output for the options in @entries with gettext(), or None</p></td>
</tr>
<tr>
<td><p>Returns :</p></td>
<td><p>%CLUTTER_INIT_SUCCESS if Clutter has been successfully</p></td>
</tr>
</table>
<p>Since 0.2</p>
</page>
