<?xml version="1.0"?>

<page id="Clutter.Actor.insert_child_at_index"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/experimental/ui/">
  <info>
    <link type="guide" xref="Clutter.Actor" group="method"/>
    <api:function>
      <api:returns>
        <api:type>none</api:type>
      </api:returns>
      <api:name>clutter_actor_insert_child_at_index</api:name>
      <api:arg>
        <api:type>ClutterActor *</api:type>
        <api:name>self</api:name>
      </api:arg>
      <api:arg>
        <api:type>Clutter.Actor</api:type>
        <api:name>child</api:name>
      </api:arg>
      <api:arg>
        <api:type>gint</api:type>
        <api:name>index_</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>insert_child_at_index</title>
<synopsis><code mime="text/x-python">
@accepts(Clutter.Actor, gint)
@returns(none)
def insert_child_at_index(child, index_)
</code></synopsis>
<p>Inserts @child into the list of children of @self, using the
given @index_. If @index_ is greater than the number of children
in @self, or is less than 0, then the new child is added at the end.</p><p>This function will acquire a reference on @child that will only
be released when calling clutter_actor_remove_child().</p><p>This function will not take into consideration the <link xref="Clutter.Actor-depth">Clutter.Actor:depth</link>
of @child.</p><p>This function will emit the <link xref="Clutter.Container-actor-added">Clutter.Container::actor-added</link> signal
on @self.</p>

<table>
<tr>
<td><p>child :</p></td>
<td><p>a <link xref="Clutter.Actor">Clutter.Actor</link></p></td>
</tr>
<tr>
<td><p>index_ :</p></td>
<td><p>the index</p></td>
</tr>
</table>
<p>Since 1.10</p>
</page>
