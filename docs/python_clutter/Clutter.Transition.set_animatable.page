<?xml version="1.0"?>

<page id="Clutter.Transition.set_animatable"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/experimental/ui/">
  <info>
    <link type="guide" xref="Clutter.Transition" group="method"/>
    <api:function>
      <api:returns>
        <api:type>none</api:type>
      </api:returns>
      <api:name>clutter_transition_set_animatable</api:name>
      <api:arg>
        <api:type>ClutterTransition *</api:type>
        <api:name>self</api:name>
      </api:arg>
      <api:arg>
        <api:type>Clutter.Animatable</api:type>
        <api:name>animatable</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>set_animatable</title>
<synopsis><code mime="text/x-python">
@accepts(Clutter.Animatable)
@returns(none)
def set_animatable(animatable)
</code></synopsis>
<p>Sets the <link xref="Clutter.Transition-animatable">Clutter.Transition:animatable</link> property.</p><p>The @transition will acquire a reference to the @animatable instance,
and will call the <link xref="Clutter.TransitionClass">Clutter.TransitionClass</link>.attached() virtual function.</p><p>If an existing <link xref="Clutter.Animatable">Clutter.Animatable</link> is attached to @transition, the
reference will be released, and the <link xref="Clutter.TransitionClass">Clutter.TransitionClass</link>.detached()
virtual function will be called.</p>

<table>
<tr>
<td><p>animatable :</p></td>
<td><p>a <link xref="Clutter.Animatable">Clutter.Animatable</link>, or None</p></td>
</tr>
</table>
<p>Since 1.10</p>
</page>
