<?xml version="1.0"?>

<page id="Clutter.Color.from_string"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/experimental/ui/">
  <info>
    <link type="guide" xref="Clutter.Color" group="function"/>
    <api:function>
      <api:returns>
        <api:type>gboolean</api:type>
      </api:returns>
      <api:name>clutter_color_from_string</api:name>
      <api:arg>
        <api:type>utf8</api:type>
        <api:name>str</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>from_string</title>
<synopsis><code mime="text/x-python">
@accepts(utf8)
@returns(gboolean)
def from_string(str)
</code></synopsis>
<p>Parses a string definition of a color, filling the
&lt;structfield&gt;red&lt;/structfield&gt;, &lt;structfield&gt;green&lt;/structfield&gt;, 
&lt;structfield&gt;blue&lt;/structfield&gt; and &lt;structfield&gt;alpha&lt;/structfield&gt; 
channels of @color.</p><p>The @color is not allocated.</p><p>The format of @str can be either one of:</p><p>&lt;itemizedlist&gt;
&lt;listitem&gt;
&lt;para&gt;a standard name (as taken from the X11 rgb.txt file)&lt;/para&gt;
&lt;/listitem&gt;
&lt;listitem&gt;
&lt;para&gt;an hexadecimal value in the form: &lt;literal&gt;&amp;num;rgb&lt;/literal&gt;,
&lt;literal&gt;&amp;num;rrggbb&lt;/literal&gt;, &lt;literal&gt;&amp;num;rgba&lt;/literal&gt; or
&lt;literal&gt;&amp;num;rrggbbaa&lt;/literal&gt;&lt;/para&gt;
&lt;/listitem&gt;
&lt;listitem&gt;
&lt;para&gt;a RGB color in the form: &lt;literal&gt;rgb(r, g, b)&lt;/literal&gt;&lt;/para&gt;
&lt;/listitem&gt;
&lt;listitem&gt;
&lt;para&gt;a RGB color in the form: &lt;literal&gt;rgba(r, g, b, a)&lt;/literal&gt;&lt;/para&gt;
&lt;/listitem&gt;
&lt;listitem&gt;
&lt;para&gt;a HSL color in the form: &lt;literal&gt;hsl(h, s, l)&lt;/literal&gt;&lt;/para&gt;
&lt;/listitem&gt;
&lt;listitem&gt;
&lt;para&gt;a HSL color in the form: &lt;literal&gt;hsla(h, s, l, a)&lt;/literal&gt;&lt;/para&gt;
&lt;/listitem&gt;
&lt;/itemizedlist&gt;</p><p>where 'r', 'g', 'b' and 'a' are (respectively) the red, green, blue color
intensities and the opacity. The 'h', 's' and 'l' are (respectively) the
hue, saturation and luminance values.</p><p>In the rgb() and rgba() formats, the 'r', 'g', and 'b' values are either
integers between 0 and 255, or percentage values in the range between 0%
and 100%; the percentages require the '%' character. The 'a' value, if
specified, can only be a floating point value between 0.0 and 1.0.</p><p>In the hls() and hlsa() formats, the 'h' value (hue) it's an angle between
0 and 360.0 degrees; the 'l' and 's' values (luminance and saturation) are
a floating point value between 0.0 and 1.0. The 'a' value, if specified,
can only be a floating point value between 0.0 and 1.0.</p><p>Whitespace inside the definitions is ignored; no leading whitespace
is allowed.</p><p>If the alpha component is not specified then it is assumed to be set to
be fully opaque.</p>

<table>
<tr>
<td><p>str :</p></td>
<td><p>a string specifiying a color</p></td>
</tr>
<tr>
<td><p>Returns :</p></td>
<td><p>True if parsing succeeded, and False otherwise</p></td>
</tr>
</table>
<p>Since 1.0</p>
</page>
