<?xml version="1.0"?>
<page id="Clutter.Container-create_child_meta"
      type="topic"
      style="vfunc"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/experimental/ui/">
  <info>
    <link type="guide" xref="Clutter.Container" group="vfunc"/>
    <title type="link" role="topic">create_child_meta</title>
  </info>
  <title>Clutter.Container.create_child_meta</title>
<synopsis><code mime="text/x-python">
@accepts(Clutter.Actor)
@returns(none)
def do_create_child_meta(self, actor):
</code></synopsis>
<p>Creates the <link xref="Clutter.ChildMeta">Clutter.ChildMeta</link> wrapping @actor inside the
@container, if the <link xref="Clutter.ContainerIface-child_meta_type">Clutter.ContainerIface::child_meta_type</link>
class member is not set to %G_TYPE_INVALID.</p><p>This function is only useful when adding a <link xref="Clutter.Actor">Clutter.Actor</link> to
a <link xref="Clutter.Container">Clutter.Container</link> implementation outside of the
<link xref="Clutter.Container-add">Clutter.Container::add</link>() virtual function implementation.</p><p>Applications should not call this function.</p>

<table>
<tr>
<td><p>actor :</p></td>
<td><p>a <link xref="Clutter.Actor">Clutter.Actor</link></p></td>
</tr>
</table>
<p>Since 1.2</p>
</page>
