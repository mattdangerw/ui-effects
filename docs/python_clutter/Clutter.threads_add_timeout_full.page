<?xml version="1.0"?>

<page id="Clutter.threads_add_timeout_full"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/experimental/ui/">
  <info>
    <link type="guide" xref="index" group="function"/>
    <api:function>
      <api:returns>
        <api:type>guint</api:type>
      </api:returns>
      <api:name>clutter_threads_add_timeout_full</api:name>
      <api:arg>
        <api:type>gint</api:type>
        <api:name>priority</api:name>
      </api:arg>
      <api:arg>
        <api:type>guint</api:type>
        <api:name>interval</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.SourceFunc</api:type>
        <api:name>func</api:name>
      </api:arg>
      <api:arg>
        <api:type>gpointer</api:type>
        <api:name>data</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.DestroyNotify</api:type>
        <api:name>notify</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>threads_add_timeout_full</title>
<synopsis><code mime="text/x-python">
@accepts(gint, guint, GLib.SourceFunc, gpointer, GLib.DestroyNotify)
@returns(guint)
def threads_add_timeout_full(priority, interval, func, data, notify)
</code></synopsis>
<p>Sets a function to be called at regular intervals holding the Clutter
threads lock, with the given priority. The function is called repeatedly
until it returns False, at which point the timeout is automatically
removed and the function will not be called again. The @notify function
is called when the timeout is removed.</p><p>The first call to the function will be at the end of the first @interval.</p><p>It is important to note that, due to how the Clutter main loop is
implemented, the timing will not be accurate and it will not try to
"keep up" with the interval.</p><p>See also clutter_threads_add_idle_full().</p>

<table>
<tr>
<td><p>priority :</p></td>
<td><p>the priority of the timeout source. Typically this will be in the range between <link xref="G_PRIORITY_DEFAULT">G_PRIORITY_DEFAULT</link> and <link xref="G_PRIORITY_HIGH">G_PRIORITY_HIGH</link>.</p></td>
</tr>
<tr>
<td><p>interval :</p></td>
<td><p>the time between calls to the function, in milliseconds</p></td>
</tr>
<tr>
<td><p>func :</p></td>
<td><p>function to call</p></td>
</tr>
<tr>
<td><p>data :</p></td>
<td><p>data to pass to the function</p></td>
</tr>
<tr>
<td><p>notify :</p></td>
<td><p>function to call when the timeout source is removed</p></td>
</tr>
<tr>
<td><p>Returns :</p></td>
<td><p>the ID (greater than 0) of the event source.</p></td>
</tr>
</table>
<p>Since 0.4</p>
</page>
